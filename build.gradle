plugins {
    id("idea")
    id("java")
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
}
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

version = "${mod_version}"
group = "trinsdar.ic2c_extras" // http://maven.apache.org/guides/mini/guide-naming-conventions.html

base {
    archivesName = "IC2CExtras"
}

jarJar.enable()

minecraft {
    mappings channel: "parchment", version: "${rootProject.mappings_version}-${rootProject.minecraft_version}"

    copyIdeResources = true

    runs {
        // applies to all the run configs below
        configureEach {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            // Comma-separated list of namespaces to load gametests from. Empty = all namespaces.
            property 'forge.enabledGameTestNamespaces', mod_id

            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }

        client {
            property 'forge.enabledGameTestNamespaces', mod_id
        }

        server {
            workingDirectory project.file('run/server')
            property 'forge.enabledGameTestNamespaces', mod_id
            args '--nogui'
        }

        // This run config launches GameTestServer and runs all registered gametests, then exits.
        // By default, the server will crash when no gametests are provided.
        // The gametest system is also enabled by default for other run configs under the /test command.
        gameTestServer {
            property 'forge.enabledGameTestNamespaces', mod_id
        }

        data {
            // example of overriding the workingDirectory set in configureEach above
            workingDirectory project.file('run-data')

            // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
            args '--mod', mod_id, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }


repositories{
    maven { url "https://repo.spongepowered.org/repository/maven-public" }
    maven {
        name = 'parchment'
        url = 'https://maven.parchmentmc.org'
    }
    maven {
        // location of the maven that hosts JEI files since January 2023
        name = "Jared's maven"
        url = "https://maven.blamejared.com/"
    }
    maven { url "https://maven.shedaniel.me" }
    maven {
        url = "https://api.modrinth.com/maven"
    }
    maven {
        url "https://cursemaven.com"
    }
    maven {
        url = "https://repo.repsy.io/mvn/trinsdar/gregtech-intergalactical/"
    }
    //botarium
    maven {
        name = "Resourceful Bees Maven"
        url = "https://nexus.resourcefulbees.com/repository/maven-public/"
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
    //modImplementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation(fg.deobf("curse.maven:ic2_classic-242942:5230420"))
    implementation(fg.deobf("curse.maven:ic2c_additions-304040:4360883"))
    implementation(fg.deobf("curse.maven:curios-309927:3871347"))
    implementation(fg.deobf("maven.modrinth:carbon-config:l6LTuPIs"))
    jarJar("maven.modrinth:carbon-config:mJxg4ZgM") {
        jarJar.ranged(it, "[1.19.2-1.2.6,)")
    }
    jarJar("earth.terrarium:botarium-forge-${project.minecraft_version}:1.8.2"){
        jarJar.ranged(it, "[1.8.2,)")
    }
    implementation(fg.deobf("earth.terrarium:botarium-forge-${project.minecraft_version}:1.8.2"))
    implementation(fg.deobf("curse.maven:jei-238222:4712866"))
    implementation(fg.deobf("io.github.gregtechintergalactical:tesseract-forge:${tesseract_version}"))
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.mod_version

    filesMatching("META-INF/mods.toml") {
        expand "version": project.mod_version
    }
}

// Example for how to get properties into the manifest for reading at runtime.
tasks.named('jar', Jar).configure {
    manifest {
        attributes([
                'Specification-Title'     : mod_id,
                'Specification-Vendor'    : "Trinsdar",
                'Specification-Version'   : '1', // We are version 1 of ourselves
                'Implementation-Title'    : project.name,
                'Implementation-Version'  : project.jar.archiveVersion,
                'Implementation-Vendor'   : "Trinsdar",
                'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }

    // This is the preferred method to reobfuscate your jar file
    finalizedBy 'reobfJar'
}